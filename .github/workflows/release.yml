name: Release

on:
  release:
    types: [created]

jobs:
  build-and-release-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE --parallel 10

      - name: Compress files
        run: tar -czf san-macos-binaries.tar.gz std bin/san examples internal

      - name: Upload the artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: san-macos-binaries.tar.gz
          asset_name: san-${{ github.event.release.tag_name }}-macos-binaries.tar.gz
          asset_content_type: application/tar+gzip

  build-and-release-ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        cc: [[gcc, g++]]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install C++ packages
        run: sudo apt-get install libc++-dev libc++abi-dev

      - name: Install uuid package
        run: sudo apt-get install uuid-dev

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        env:
          CC: ${{ matrix.cc[0] }}
          CXX: ${{ matrix.cc[1] }}
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        env:
          CC: ${{ matrix.cc[0] }}
          CXX: ${{ matrix.cc[1] }}
        run: cmake --build . --config $BUILD_TYPE --parallel 10

      - name: Compress files
        run: tar -czf san-ubuntu-binaries.tar.gz std bin/san examples internal

      - name: Upload the artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: san-ubuntu-binaries.tar.gz
          asset_name: san-${{ github.event.release.tag_name }}-ubuntu-binaries.tar.gz
          asset_content_type: application/tar+gzip
